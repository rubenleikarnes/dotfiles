[user]
	name = Ruben
	email = ruben@2110.no

[core]
	editor = nvim

	# Use custom `.gitignore` and `.gitattributes`
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes

	# Make `git rebase` safer on OS X
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false

	# Prevent showing files whose names contain non-ASCII symbols as unversioned.
	# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
	precomposeunicode = false

  # https://github.com/dandavison/delta
  pager = delta

	whitespace = trailing-space,space-before-tab

[interactive]
  diffFilter = delta --color-only

[color]
	# Use colors in Git commands that are capable of colored output when
	# outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
	ui = true

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = 11
	frag = magenta bold
	old = red bold
	new = green bold
	commit = yellow bold
	whitespace = red reverse

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[delta]
  navigate = true    # use n and N to move between diff sections
  light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
  line-numbers = true

[diff]
	# Detect copies as well as renames
	renames = copies

[diff "bin"]
	# Use `hexdump` to diff binary files
	textconv = hexdump -v -C
  colorMoved = default

[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true
  conflictstyle = diff3

[help]
	# Automatically correct and execute mistyped commands
	autocorrect = 1

[alias]
	# View the SHA, description, and history graph of the latest 20 commits
	l = "log --pretty=oneline -n 20 --graph --abbrev-commit"
	lg = "log --color -n 40 --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

	# View the current working tree status using the short format
	s = status -s

	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD; git diff --patch-with-stat"

	# Commit all changes with $editor
	ca = !git add -A && git commit -av

	# Commit all changes with inline message
	cm = !git add -A && git commit -am

	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v

	# Undo
	undo = "reset --hard HEAD~1"

	# Shows unpushed files / commited files that havent been pushed
	unpushed = "log --branches --not --remotes --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

	# Shorten Commit
	c = commit -v

	# List contributors with number of commits
	contributors = shortlog --summary --numbered

[push]
	default = simple

	# Make `git push` push relevant annotated tags when pushing branches out.
	followTags = true

	# Any GitHub repo with my username should be checked out r/w by default
	# http://rentzsch.tumblr.com/post/564806957/public-but-hackable-git-submodules
	# [url "git@github.com:rubenleikarnes/"]
	# 	insteadOf = "git://github.com/rubenleikarnes/"

[credential]
	helper = manager

[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
	process = git-lfs filter-process
[http]
	sslVerify = true
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[init]
	defaultBranch = main
[pull]
	rebase = true
